{"ts":1352952238708,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"var mongodb = require('mongodb');\nvar Db = require('mongodb').Db;\nvar Connection = require('mongodb').Connection;\nvar Server = require('mongodb').Server;\nvar BSON = require('mongodb').BSON;\nvar ObjectID = require('mongodb').ObjectID;\nvar MongoConnector = require('./MongoConnector').MongoConnector;\n\n\n// PUBLIC METHODS\nDataProvider = function(host, port) {\n    //    this.db = new Db('applekeyTest', new Server('alex.mongohq.com', 10041, {\n    //        auto_reconnect: true\n    //    }), {});\n    this.db = MongoConnector.GetConnection(host, port);\n}\n\nDataProvider.prototype.find = function(collectionId, findargs, callback) {\n\n    var thatdb = this.db;\n    Open(thatdb, function(error) {\n        if (error) {\n            //thatdb.close();\n            callback(error);\n            return;\n        }\n        var collection = new mongodb.Collection(thatdb, collectionId);\n        collection.find(findargs).toArray(function(err, docs) {\n            if (error) {\n                //thatdb.close();\n                callback(err);\n            }\n            else\n            {\n             thatdb.close();\n             callback(null,docs);\n            }\n        });\n    })\n}\n\n\n\n\nDataProvider.prototype.findAll = function(collectionId, callback) {\n\n    var thatdb = this.db;\n    Open(thatdb, function(error) {\n        if (error) {\n            //thatdb.close();\n            callback(error);\n            return;\n        }\n        var collection = new mongodb.Collection(thatdb, collectionId);\n        collection.find({}, {\n            limit: 10\n        }).toArray(function(err, docs) {\n            if (error) {\n                //thatdb.close();\n                callback(err);\n                return;\n            }\n            console.dir(docs);\n            //thatdb.close();\n            callback(null, docs);\n        });\n    });\n};\n\n\nDataProvider.prototype.save = function(collectionId, item, callback) {\n    var thatdb = this.db;\n    Open(thatdb, function(error) {\n        if (error) {\n            //thatdb.close();\n            callback(error);\n            return;\n        }\n        var collection = new mongodb.Collection(thatdb, collectionId);\n        collection.insert(item, null, function(error) {\n            if (error) {\n                //thatdb.close();\n                callback(error);\n                return;\n            }\n            else {\n                thatdb.close();\n                callback(null);\n            }\n        });\n    });\n}\n\nDataProvider.prototype.deleteall = function(collectionId, callback) {\n    var thatdb = this.db;\n    Open(thatdb, function(error) {\n        if (error) {\n            //thatdb.close();\n            callback(error);\n            return;\n        }\n\n        var collection = new mongodb.Collection(thatdb, collectionId);\n        collection.remove(function(error) {\n            if (error) {\n                //thatdb.close();\n                callback(error);\n            }\n            else {\n                //thatdb.close();\n                callback(null, 'removedall')\n            };\n\n        });\n\n    });\n}\n// PRIVATE METHODS\n// TODO MAKE THESE ACTUALLY PRIVATE\n\nvar Open = function(mdb, callback) {\n\n    if (IsOpen(mdb)) {\n        callback(null);\n        return;\n    }\n    mdb.open(function(err, client) {\n        if (err) {\n            callback(err);\n            return;\n        }\n\n        mdb.authenticate('applekey', 'poppy222', function(err) {\n            if (err) callback('couldnt authemticate');\n            else callback(null);\n        });\n    });\n}\n\nvar IsOpen = function(mdb) {\n    if (mdb._state === 'connected') return true;\n    else return false;\n}\n\nexports.DataProvider = DataProvider;\n"]],"start1":0,"start2":0,"length1":0,"length2":3637}]],"length":3637}
{"contributors":[],"silentsave":false,"ts":1352953453418,"patch":[[{"diffs":[[0,"pen(mdb)) {\n"],[1,"        console.log('openingdb');\n"],[0,"        call"]],"start1":3148,"start2":3148,"length1":24,"length2":58}]],"length":3671,"saved":false}
{"ts":1352953493426,"patch":[[{"diffs":[[0,"    "],[-1,"console.log('openingdb');"],[0,"\n   "]],"start1":3164,"start2":3164,"length1":33,"length2":8},{"diffs":[[0,"turn;\n    }\n"],[1,"    console.log('openingdb');\n    \n"],[0,"    mdb.open"]],"start1":3203,"start2":3203,"length1":24,"length2":59}]],"length":3681,"saved":false}
{"ts":1352953582717,"patch":[[{"diffs":[[0," {\n             "],[1,"//"],[0,"thatdb.close();\n"]],"start1":1067,"start2":1067,"length1":32,"length2":34}]],"length":3683,"saved":false}
{"ts":1352953605846,"patch":[[{"diffs":[[0,"        "],[1,"//"],[0,"thatdb.c"]],"start1":2352,"start2":2352,"length1":16,"length2":18}]],"length":3685,"saved":false}
{"ts":1352953630748,"patch":[[{"diffs":[[0,") {\n        "],[1,"console.log('db is open');"],[0,"\n        cal"]],"start1":3160,"start2":3160,"length1":24,"length2":50}]],"length":3711,"saved":false}
{"contributors":[],"silentsave":false,"ts":1353035947433,"patch":[[{"diffs":[[0,") {\n"],[-1,"    //    this.db = new Db('applekeyTest', new Server('alex.mongohq.com', 10041, {\n    //        auto_reconnect: true\n    //    }), {});\n"],[0,"    "]],"start1":353,"start2":353,"length1":145,"length2":8}]],"length":3574,"saved":false}
{"contributors":[],"silentsave":false,"ts":1353137728810,"patch":[[{"diffs":[[0,"ndargs)."],[-1,"toArray"],[1,"findOne"],[0,"(functio"]],"start1":760,"start2":760,"length1":23,"length2":23}]],"length":3574,"saved":false}
{"ts":1353137859701,"patch":[[{"diffs":[[0,"ion.find"],[1,"one"],[0,"(findarg"]],"start1":749,"start2":749,"length1":16,"length2":19},{"diffs":[[0,"args"],[-1,").findOne("],[1,","],[0,"func"]],"start1":765,"start2":765,"length1":18,"length2":9}]],"length":3568,"saved":false}
{"ts":1353137894609,"patch":[[{"diffs":[[0,"ion.find"],[-1,"o"],[1,"O"],[0,"ne(finda"]],"start1":749,"start2":749,"length1":17,"length2":17}]],"length":3568,"saved":false}
{"contributors":[],"silentsave":false,"ts":1353144889289,"patch":[[{"diffs":[[0,", port);\n}\n\n"],[1,"\nDataProvider.prototype.findFive = function(collectionId, findargs, callback)\n{\n    \n}\n\n\n"],[0,"DataProvider"]],"start1":404,"start2":404,"length1":24,"length2":113}]],"length":3657,"saved":false}
{"ts":1353144896464,"patch":[[{"diffs":[[0,")\n{\n    "],[1," var thatdb = this.db;\n    Open(thatdb, function(error) {\n        if (error) {\n            //thatdb.close();\n            callback(error);\n            return;\n        }\n        var collection = new mongodb.Collection(thatdb, collectionId);\n        collection.findOne(findargs,function(err, docs) {\n            if (error) {\n                //thatdb.close();\n                callback(err);\n            }\n            else\n            {\n             //thatdb.close();\n             callback(null,docs);\n            }\n        });\n    })"],[0,"\n}\n\n\nDat"]],"start1":492,"start2":492,"length1":16,"length2":545}]],"length":4186,"saved":false}
{"ts":1353144898937,"patch":[[{"diffs":[[0,"back)\n{\n    "],[-1," "],[0,"var thatdb ="]],"start1":488,"start2":488,"length1":25,"length2":24}]],"length":4185,"saved":false}
{"ts":1353145061171,"patch":[[{"diffs":[[0,"lection.find"],[-1,"One(findargs"],[1,"({},{limit:1}"],[0,",function(er"]],"start1":749,"start2":749,"length1":36,"length2":37}]],"length":4186,"saved":false}
{"ts":1353145099325,"patch":[[{"diffs":[[0,"ollectionId,"],[-1," findargs,"],[0," callback)\n{"]],"start1":461,"start2":461,"length1":34,"length2":24}]],"length":4176,"saved":false}
{"ts":1353145914981,"patch":[[{"diffs":[[0,"ind("],[1,"("],[0,"{},"],[-1,"{limit:1},"],[1," {\n            limit: 10\n        })"],[0,"func"]],"start1":748,"start2":748,"length1":21,"length2":47},{"diffs":[[0,"ction(err, docs)"],[1,".toArray("],[0," {\n            i"]],"start1":794,"start2":794,"length1":32,"length2":41}]],"length":4211,"saved":false}
{"ts":1353145929753,"patch":[[{"diffs":[[0,"on.find("],[-1,"("],[0,"{}, {\n  "]],"start1":744,"start2":744,"length1":17,"length2":16},{"diffs":[[0,"      })"],[1,".toArray( "],[0,"function"]],"start1":782,"start2":782,"length1":16,"length2":26},{"diffs":[[0,"r, docs)"],[-1,".toArray( "],[0,"{\n      "]],"start1":811,"start2":811,"length1":26,"length2":16}]],"length":4210,"saved":false}
{"ts":1353145954788,"patch":[[{"diffs":[[0,"         limit: "],[-1,"10"],[1,"5"],[0,"\n        }).toAr"]],"start1":761,"start2":761,"length1":34,"length2":33}]],"length":4209,"saved":false}
