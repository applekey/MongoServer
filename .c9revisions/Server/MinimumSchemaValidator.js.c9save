{"ts":1353036466849,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"\nvar MinimumObject = {\n    Imagelink: 'string',\n    Id: 123\n};\n\nMinimumSchemaValidator = function(MinimumObject){\n    this.minObject = MinimumObject;\n    }\n\nMinimumSchemaValidator.prototype.Validate = function(JsonObject, callback) {\n    if (JsonObject === 'null') {\n        callback('JsonObject is null');\n        return;\n    }\n\n    for (var prop in this.minObject) {\n        if (!HasOwnProperty(JsonObject, prop)) {\n            callback('function does not have ' + prop);\n            return;\n        }\n    }\n    callback(null);\n}\n\nfunction HasOwnProperty(obj, prop){\n    var proto = obj.__proto__ || obj.constructor.prototype;\n    return (prop in obj) &&\n        (!(prop in proto) || proto[prop] !== obj[prop]);\n}\n\n//Unit Tests\n\n//var MyJsonObject = {\n//    Imagelink: 'ab',\n//    Id: 321,\n//}\n//\n//var minValidator = new MinimumSchemaValidator(MinimumObject);\n//minValidator.Validate(MyJsonObject, function(error) {\n//    if (error) console.log(error);\n//    else console.log('good');\n//});\n\nexports.MinimumSchemaValidator = MinimumSchemaValidator;"]],"start1":0,"start2":0,"length1":0,"length2":1051}]],"length":1051}
